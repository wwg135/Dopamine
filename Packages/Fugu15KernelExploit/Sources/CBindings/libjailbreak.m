#include <dlfcn.h>
#import <Foundation/Foundation.h>
#import <IOKit/IOKitLib.h>

void *libJailbreakHandle = NULL;

//NSString *prebootPath(NSString *path)
//{
//	/*static*/ NSString *sPrebootPrefix = nil;
//	static dispatch_once_t onceToken;
//	//dispatch_once (&onceToken, ^{
//		NSMutableString* bootManifestHashStr;
//		io_registry_entry_t registryEntry = IORegistryEntryFromPath(kIOMainPortDefault, "IODeviceTree:/chosen");
//		if (registryEntry) {
//			CFDataRef bootManifestHash = (CFDataRef)IORegistryEntryCreateCFProperty(registryEntry, CFSTR("boot-manifest-hash"), kCFAllocatorDefault, 0);
//			if (bootManifestHash) {
//				const UInt8* buffer = CFDataGetBytePtr(bootManifestHash);
//				bootManifestHashStr = [NSMutableString stringWithCapacity:(CFDataGetLength(bootManifestHash) * 2)];
//				for (CFIndex i = 0; i < CFDataGetLength(bootManifestHash); i++) {
//					[bootManifestHashStr appendFormat:@"%02X", buffer[i]];
//				}
//				CFRelease(bootManifestHash);
//			}
                }
//        assert(bootManifestHashStr != NULL);
//		if (bootManifestHashStr) {
//			NSString *activePrebootPath = [@"/private/preboot/" stringByAppendingPathComponent:bootManifestHashStr];
//			NSArray *subItems = [[NSFileManager defaultManager] contentsOfDirectoryAtPath:activePrebootPath error:nil];
//			for (NSString *subItem in subItems) {
//				if ([subItem hasPrefix:@"jbroot-"]) {
//                    sPrebootPrefix = [activePrebootPath stringByAppendingPathComponent:subItem];// stringByAppendingPathComponent:@"procursus"];
//					break;
//				}
//			}
//		}
////		else {
////			sPrebootPrefix = @"/var/jb";
////		}
//	//});
//
//    if(!sPrebootPrefix) return nil;
//
//	if (path) {
//		return [sPrebootPrefix stringByAppendingPathComponent:path];
//	}
//	else {
//		return sPrebootPrefix;
//	}
//}

#include <sys/mount.h>
NSString *jbrootPath(NSString *path)
{
    NSString * jbroot = nil;
    NSArray *subItems = [[NSFileManager defaultManager] contentsOfDirectoryAtPath:@"/var/" error:nil];
    for (NSString *subItem in subItems) {
        if ([subItem hasPrefix:@"jbroot-"]) {
            jbroot = [@"/var/" stringByAppendingPathComponent:subItem];// stringByAppendingPathComponent:@"procursus"];
            break;
        }
    }

    assert(jbroot != NULL); //to avoid [nil stringByAppendingString:
    return [jbroot stringByAppendingPathComponent:path];
}

void *loadLibJailbreak(void)
{
	if (libJailbreakHandle) return libJailbreakHandle;
    NSString * jbroot = nil;
    NSArray *subItems = [[NSFileManager defaultManager] contentsOfDirectoryAtPath:@"/var/" error:nil];
    for (NSString *subItem in subItems) {
        if ([subItem hasPrefix:@"jbroot-"]) {
            jbroot = [@"/var/" stringByAppendingPathComponent:subItem];// stringByAppendingPathComponent:@"procursus"];
            break;
        }
    }
    if(!jbroot) return NULL;
	libJailbreakHandle = dlopen(jbrootPath(@"/basebin/libjailbreak.dylib").UTF8String, RTLD_NOW);
	return libJailbreakHandle;
}
